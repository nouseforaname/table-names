resources:
  - name: table_names
    type: git
    source:
      uri: git@github.com:nouseforaname/table-names
      branch: master
      private_key: ((git_key))
  - name: pipelines
    type: concourse-pipeline
    source:
      target: ((concourse_url))
      insecure: "true"
      teams:
      - name: main
        username:  ((concourse_username))
        password: ((concourse_password))
jobs: 
  - name: ingestion
    plan:
      - get: table_names
      - task: ingest
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: docker-registry.collibra.com/catalog-edge/ingestion
              tag: "0.0.1"
              username: jenkins
              password: ((jenkins_pw))
              insecure_registries: [ "docker-registry.collibra.com" ]
          outputs:
            - name: ingestion
          run:
            path: bash
            args:
            - -c
            - |
              java -jar /opt/collibra/ingestion.jar
              cp /root/edge_poc/ingestion/result.json ingestion/result.json
      - task: write-tasks
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: ellerbrock/alpine-bash-git }
          run:
            path: bash
            args:
              - -c
              - |
                #!/bin/bash
                echo -e 'parallel_tasks:\n  limit: 5\n  steps:' > tasks/tasks.yml
                IFS=','; for f in $(cat ingestion/result.json | sed 's#\[##' | sed 's#\]##'); do 
                  echo "
                    - task: profile $f
                      config:
                        platform: linux
                        image_resource:
                          type: docker-image
                          source:
                            repository: docker-registry.collibra.com/catalog-edge/profiling
                            tag: \"0.0.2\"
                            username: jenkins
                            password: ((jenkins_pw))
                            insecure_registries: [ \"docker-registry.collibra.com\" ]
                        run: 
                          path: sh
                          args:
                          - -c
                          - |
                            export TABLE_NAME=$f
                            export CONN_STRING=((conn_string)) 
                            java -Xmx2G -jar /app/profiling-0.0.2.jar
                    " >> tasks/tasks.yml
                done
                cat tasks/tasks.yml
          outputs:
            - name: tasks
          inputs:
            - name: table_names
            - name: ingestion
      - put: pipelines
        params:
          pipelines:
          - name: hackweek
            team: main
            config_file: table_names/hackweek.yml
            vars_files:
            - tasks/tasks.yml

  - name: profile
    plan: 
      - get: pipelines
        passed: [ingestion]
      - in_parallel: ((parallel_tasks))



resource_types:
- name: docker-image-resource
  type: docker-image
  source:
    repository: concourse/registry-image-resource
    tag: latest
- name: concourse-pipeline
  type: docker-image
  source:
    repository: concourse/concourse-pipeline-resource    
